name: ci

on:
  push:
    branches: master

jobs:
  main:
    runs-on: ubuntu-latest
    if: (needs.main-cish.result == 'failure')
    needs: main-cish
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Cache local Maven repository
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Checkout
        uses: actions/checkout@v2

      - name: build
        run: |
          if [[ "$GITHUB_REF" = refs/heads/* ]]; then
          export VERSIONING_GIT_BRANCH=${GITHUB_REF#refs/heads/};
          elif [[ "$GITHUB_REF" = refs/tags/* ]]; then
          export VERSIONING_GIT_TAG=${GITHUB_REF#refs/tags/};
          elif [[ "$GITHUB_REF" = refs/pull/*/merge ]]; then
          export VERSIONING_GIT_BRANCH=${GITHUB_REF#refs/};
          VERSIONING_GIT_BRANCH=${VERSIONING_GIT_BRANCH%/merge};
          fi
          ./build.sh

      - name: docker
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./docker/build/
          file: ./docker/build/Dockerfile
          tags: alexanderlindner/cish:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  main-cish:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        if: ${{ !env.ACT }}
        uses: docker/setup-qemu-action@v1.0.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Checkout
        uses: actions/checkout@v2

      - name: setup cish
        uses: ./.github/actions

      - name: Cache local Maven repository
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache local cish cache repository
        uses: actions/cache@v2.1.4
        with:
          path: ./.cish/
          key: ${{ runner.os }}-cish-${{ hashFiles('**/build.cish') }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-cish-

      - name: build
        run: |
          if [[ "$GITHUB_REF" = refs/heads/* ]]; then
          export VERSIONING_GIT_BRANCH=${GITHUB_REF#refs/heads/};
          elif [[ "$GITHUB_REF" = refs/tags/* ]]; then
          export VERSIONING_GIT_TAG=${GITHUB_REF#refs/tags/};
          elif [[ "$GITHUB_REF" = refs/pull/*/merge ]]; then
          export VERSIONING_GIT_BRANCH=${GITHUB_REF#refs/};
          VERSIONING_GIT_BRANCH=${VERSIONING_GIT_BRANCH%/merge};
          fi
          ./build.sh

      - name: docker
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./docker/build/
          file: ./docker/build/Dockerfile
          tags: alexanderlindner/cish:latest

      - name: docker alpine
        id: docker_build_alpine
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./docker/build/
          file: ./docker/build/Dockerfile.alpine
          tags: alexanderlindner/cish:alpine

      - name: docker distroless
        id: docker_build_distroless
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./docker/build/
          file: ./docker/build/Dockerfile.distroless
          tags: alexanderlindner/cish:distroless

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
