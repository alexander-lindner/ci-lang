#!/bin/cish
########### BASE paths ###########
currentDir = IO::currentDir()
USER_HOME = IO::home()
TMPDIR = IO::createTempDir()

HOME = USER_HOME.getParent() // should be /home
if(HOME == "/home") {
     Log::println(USER_HOME);
}
backupDir = IO::createDir(TMPDIR+"/backupDir/")

cishLibDir = IO::of("/usr/lib/cish/")
IO::findFile(cishLibDir).exec(file -> {
    if(file.~Zip() && file.~Jar()) {
        Log::println(file)
        IO::copy(file, backupDir)
    }
})

IO::findDir(GPG_AGENT).exec(file -> {
  try {
    IO::chmod(070, file)
    }catch (Exception e) {
    e.printStackTrace();
    }
});
IO::findFile(GPG_AGENT).exec(file -> {
 try {
 IO.chmod(700, file)
     }catch (Exception e) {
     e.printStackTrace();
     }
     }
 );

Console::print(GPG_AGENT);

IO::listFiles("./target").each("test");
IO::listFiles("./target");


IO::listFiles("./target").each((file) => {
  if(file.isExecutable()) {
    file.delete();
  }
});

IO::listFiles.each((file) => {
  if(file.isExecutable()) {
    file.delete();
  }
});
IO::listFiles("./target").each({
  if(it.isExecutable()) {
    it.delete();
  }
});
